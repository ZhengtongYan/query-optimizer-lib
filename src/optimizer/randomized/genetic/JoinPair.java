package optimizer.randomized.genetic;

/**
 * Each join pair corresponds to one gene for an individual generated by the genetic algorithms.
 * 
 * @author immanueltrummer
 *
 */
public class JoinPair {
	/**
	 * Index of left join operand.
	 */
	public final int leftOperand;
	/**
	 * Index of right join operand.
	 */
	public final int rightOperand;
	/**
	 * The preferred operator implementation to use for the join.
	 */
	public final int preferredOperator;
	
	public JoinPair(int leftOperand, int rightOperand, int preferredOperator) {
		assert(leftOperand != rightOperand);
		this.leftOperand = leftOperand;
		this.rightOperand = rightOperand;
		this.preferredOperator = preferredOperator;
	}
	/**
	 * Two join pairs are equal if the operand indices and their preferred operators are equal.
	 */
	public boolean equals(Object otherObject) {
		JoinPair otherJoinPair = (JoinPair)otherObject;
		return leftOperand == otherJoinPair.leftOperand && 
				rightOperand == otherJoinPair.rightOperand &&
				preferredOperator == otherJoinPair.preferredOperator;
	}
	public int hashCode() {
		return leftOperand + rightOperand + preferredOperator; 
	}
}
